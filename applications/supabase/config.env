################################################
##### shared vars
################################################

# studio, analytics, vector
LOGFLARE_API_KEY: ${SUPABASE_LOGFLARE_API_KEY}

# studio, db, supavisor
POSTGRES_PASSWORD: ${SUPABASE_POSTGRES_PASSWORD}

# db, supavisor
POSTGRES_PORT: ${SUPABASE_POSTGRES_PORT}

# db, supavisor
POSTGRES_DB: ${SUPABASE_POSTGRES_DB}

# functions, db
JWT_SECRET: ${SUPABASE_JWT_SECRET}

# studio, kong, functions
SUPABASE_ANON_KEY: ${SUPABASE_ANON_KEY}

# studio, kong
SUPABASE_SERVICE_KEY: ${SUPABASE_SERVICE_KEY}

# supavisor, realtime
PORT: 4000

# realtime, analytics
DB_PASSWORD: ${SUPABASE_POSTGRES_PASSWORD}

# realtime, supabase
ERL_AFLAGS: -proto_dist inet_tcp

################################################
##### studio
################################################

STUDIO_PG_META_URL: http://meta:8080

DEFAULT_ORGANIZATION_NAME: ${SUPABASE_DEFAULT_ORGANIZATION_NAME}
DEFAULT_PROJECT_NAME: ${SUPABASE_DEFAULT_PROJECT_NAME}
OPENAI_API_KEY: ${SUPABASE_OPENAI_API_KEY}

SUPABASE_URL: http://kong:8000
SUPABASE_PUBLIC_URL: ${SUPABASE_PUBLIC_URL}

AUTH_JWT_SECRET: ${SUPABASE_JWT_SECRET}

LOGFLARE_URL: http://analytics:4000
NEXT_PUBLIC_ENABLE_LOGS: true
NEXT_ANALYTICS_BACKEND_PROVIDER: postgres

# kong
KONG_DATABASE: "off"
KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yml
KONG_DNS_ORDER: LAST,A,CNAME
KONG_PLUGINS: request-transformer,cors,key-auth,acl,basic-auth,acme
KONG_NGINX_PROXY_PROXY_BUFFER_SIZE: 160k
KONG_NGINX_PROXY_PROXY_BUFFERS: 64 160k
DASHBOARD_USERNAME: ${SUPABASE_KONG_DASHBOARD_USERNAME}
DASHBOARD_PASSWORD: ${SUPABASE_KONG_DASHBOARD_PASSWORD}

# auth
GOTRUE_API_HOST: 0.0.0.0
GOTRUE_API_PORT: 9999
API_EXTERNAL_URL: ${SUPABASE_API_EXTERNAL_URL}

GOTRUE_DB_DRIVER: postgres
GOTRUE_DB_DATABASE_URL: postgres://supabase_auth_admin:${SUPABASE_POSTGRES_PASSWORD}@${SUPABASE_POSTGRES_HOST}:${SUPABASE_POSTGRES_PORT}/${SUPABASE_POSTGRES_DB}

GOTRUE_SITE_URL: ${SUPABASE_SITE_URL}
GOTRUE_URI_ALLOW_LIST: ${SUPABASE_ADDITIONAL_REDIRECT_URLS}
GOTRUE_DISABLE_SIGNUP: false

GOTRUE_JWT_ADMIN_ROLES: service_role
GOTRUE_JWT_AUD: authenticated
GOTRUE_JWT_DEFAULT_GROUP_NAME: authenticated
GOTRUE_JWT_EXP: 3600
GOTRUE_JWT_SECRET: ${SUPABASE_JWT_SECRET}

GOTRUE_EXTERNAL_EMAIL_ENABLED: true
GOTRUE_EXTERNAL_ANONYMOUS_USERS_ENABLED: false
GOTRUE_MAILER_AUTOCONFIRM: false

GOTRUE_SMTP_ADMIN_EMAIL: admin@example.com
GOTRUE_SMTP_HOST: supabase-mail
GOTRUE_SMTP_PORT: 2500
GOTRUE_SMTP_USER: fake_mail_user
GOTRUE_SMTP_PASS: fake_mail_password
GOTRUE_SMTP_SENDER_NAME: fake_sender
GOTRUE_MAILER_URLPATHS_INVITE: "/auth/v1/verify"
GOTRUE_MAILER_URLPATHS_CONFIRMATION: "/auth/v1/verify"
GOTRUE_MAILER_URLPATHS_RECOVERY: "/auth/v1/verify"
GOTRUE_MAILER_URLPATHS_EMAIL_CHANGE: "/auth/v1/verify"

GOTRUE_EXTERNAL_PHONE_ENABLED: true
GOTRUE_SMS_AUTOCONFIRM: true

# rest
PGRST_DB_URI: postgres://authenticator:${SUPABASE_POSTGRES_PASSWORD}@${SUPABASE_POSTGRES_HOST}:${SUPABASE_POSTGRES_PORT}/${SUPABASE_POSTGRES_DB}
PGRST_DB_SCHEMAS: public,storage,graphql_public
PGRST_DB_ANON_ROLE: anon
PGRST_JWT_SECRET: ${SUPABASE_JWT_SECRET}
PGRST_DB_USE_LEGACY_GUCS: "false"
PGRST_APP_SETTINGS_JWT_SECRET: ${SUPABASE_JWT_SECRET}
PGRST_APP_SETTINGS_JWT_EXP: 3600

# realtime
DB_HOST: ${SUPABASE_POSTGRES_HOST}
DB_PORT: ${SUPABASE_POSTGRES_PORT}
DB_USER: supabase_admin
DB_NAME: ${SUPABASE_POSTGRES_DB}
DB_AFTER_CONNECT_QUERY: 'SET search_path TO _realtime'
DB_ENC_KEY: supabaserealtime
API_JWT_SECRET: ${SUPABASE_JWT_SECRET}
SECRET_KEY_BASE: ${SUPABASE_SECRET_KEY_BASE}
DNS_NODES: "''"
RLIMIT_NOFILE: "10000"
APP_NAME: realtime
SEED_SELF_HOST: true
RUN_JANITOR: true

# storage
ANON_KEY: ${SUPABASE_ANON_KEY}
SERVICE_KEY: ${SUPABASE_SERVICE_KEY}
POSTGREST_URL: http://rest:3000
PGRST_JWT_SECRET: ${SUPABASE_JWT_SECRET}
DATABASE_URL: postgres://supabase_storage_admin:${SUPABASE_POSTGRES_PASSWORD}@${SUPABASE_POSTGRES_HOST}:${SUPABASE_POSTGRES_PORT}/${SUPABASE_POSTGRES_DB}
FILE_SIZE_LIMIT: 52428800
STORAGE_BACKEND: file
FILE_STORAGE_BACKEND_PATH: /var/lib/storage
TENANT_ID: stub
REGION: stub
GLOBAL_S3_BUCKET: stub
ENABLE_IMAGE_TRANSFORMATION: "true"
IMGPROXY_URL: http://imgproxy:5001

# imgproxy
IMGPROXY_BIND: ":5001"
IMGPROXY_LOCAL_FILESYSTEM_ROOT: /
IMGPROXY_USE_ETAG: "true"
IMGPROXY_ENABLE_WEBP_DETECTION: true

# meta
PG_META_PORT: 8080
PG_META_DB_HOST: ${SUPABASE_POSTGRES_HOST}
PG_META_DB_PORT: ${SUPABASE_POSTGRES_PORT}
PG_META_DB_NAME: ${SUPABASE_POSTGRES_DB}
PG_META_DB_USER: supabase_admin
PG_META_DB_PASSWORD: ${SUPABASE_POSTGRES_PASSWORD}

# functions
SUPABASE_URL: http://kong:8000
SUPABASE_SERVICE_ROLE_KEY: ${SERVICE_ROLE_KEY}
SUPABASE_DB_URL: postgresql://postgres:${SUPABASE_POSTGRES_PASSWORD}@${SUPABASE_POSTGRES_HOST}:${SUPABASE_POSTGRES_PORT}/${SUPABASE_POSTGRES_DB}
VERIFY_JWT: "${FUNCTIONS_VERIFY_JWT}"

# analytics
LOGFLARE_NODE_HOST: 127.0.0.1
DB_USERNAME: supabase_admin
DB_DATABASE: _supabase
DB_HOSTNAME: ${SUPABASE_POSTGRES_HOST}
DB_PORT: ${SUPABASE_POSTGRES_PORT}
DB_SCHEMA: _analytics
LOGFLARE_SINGLE_TENANT: true
LOGFLARE_SUPABASE_MODE: true
LOGFLARE_MIN_CLUSTER_SIZE: 1

POSTGRES_BACKEND_URL: postgresql://supabase_admin:${SUPABASE_POSTGRES_PASSWORD}@${SUPABASE_POSTGRES_HOST}:${SUPABASE_POSTGRES_PORT}/_supabase
POSTGRES_BACKEND_SCHEMA: _analytics
LOGFLARE_FEATURE_FLAG_OVERRIDE: multibackend=true

# db
POSTGRES_HOST: /var/run/postgresql
PGPORT: ${SUPABASE_POSTGRES_PORT}
PGPASSWORD: ${SUPABASE_POSTGRES_PASSWORD}
PGDATABASE: ${SUPABASE_POSTGRES_DB}
JWT_EXP: 3600

# supavisor
DATABASE_URL: ecto://supabase_admin:${SUPABASE_POSTGRES_PASSWORD}@db:${SUPABASE_POSTGRES_PORT}/_supabase
CLUSTER_POSTGRES: true
SECRET_KEY_BASE: ${SUPABASE_SECRET_KEY_BASE}
VAULT_ENC_KEY: ${SUPABASE_VAULT_ENC_KEY}
API_JWT_SECRET: ${SUPABASE_JWT_SECRET}
METRICS_JWT_SECRET: ${SUPABASE_JWT_SECRET}
REGION: local
POOLER_TENANT_ID: main-tenant
POOLER_DEFAULT_POOL_SIZE: 20
POOLER_MAX_CLIENT_CONN: 100
POOLER_POOL_MODE: transaction